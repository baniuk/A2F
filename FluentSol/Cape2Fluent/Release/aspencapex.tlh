// Created by Microsoft (R) C/C++ Compiler Version 15.00.30729.01 (976add30).
//
// f:\fluentsol\cape2fluent\release\aspencapex.tlh
//
// C++ source equivalent of Win32 type library C:\AspenTech\APrSystem V7.1\Engine\Xeq\AspenCapeX.tlb
// compiler-generated file created 07/04/10 at 18:56:40 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("d9a6afd8-521c-47b2-aeab-16ba3055d5ca"))
/* LIBID */ __AspenCapeOpenExtensions;
enum __MIDL___MIDL_itf_AspenCapeX_0000_0000_0001;
enum __MIDL___MIDL_itf_AspenCapeX_0000_0000_0002;
struct __declspec(uuid("b777a1a9-0c88-11d3-822e-00c04f4f66c9"))
/* dual interface */ IAssayUpdate;
enum __MIDL___MIDL_itf_AspenCapeX_0001_0064_0001;
struct __declspec(uuid("b777a1b9-0c88-11d3-822e-00c04f4f66c9"))
/* dual interface */ IATCapeXDiagnostic;
struct __declspec(uuid("b777a1bd-0c88-11d3-822e-00c04f4f66c9"))
/* dual interface */ IATCapeXRealParameterSpec;
struct __declspec(uuid("04c5cfc1-ae5c-11d3-8454-00c04f6e76f3"))
/* dual interface */ IAspenThermoSystem;
struct __declspec(uuid("04c5cfc2-ae5c-11d3-8454-00c04f6e76f3"))
/* dual interface */ IAspenPropertyPackage;
struct __declspec(uuid("04c5cfc3-ae5c-11d3-8454-00c04f6e76f3"))
/* dual interface */ IAspenThermoError;
struct __declspec(uuid("8de3c930-8f7e-11d2-a71f-0000c0e749f8"))
/* dual interface */ IAspnMaterialTemplate;
struct /* coclass */ AspnMatTemplate;
struct /* coclass */ AspnPropSystem;
struct /* coclass */ AssayUpdate;
struct /* coclass */ ATCapeXDiagnostic;
typedef enum __MIDL___MIDL_itf_AspenCapeX_0000_0000_0001 CopyOption;
typedef enum __MIDL___MIDL_itf_AspenCapeX_0000_0000_0002 ReportOption;
typedef enum __MIDL___MIDL_itf_AspenCapeX_0001_0064_0001 ErrorSeverity;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IAssayUpdate, __uuidof(IAssayUpdate));
_COM_SMARTPTR_TYPEDEF(IATCapeXDiagnostic, __uuidof(IATCapeXDiagnostic));
_COM_SMARTPTR_TYPEDEF(IATCapeXRealParameterSpec, __uuidof(IATCapeXRealParameterSpec));
_COM_SMARTPTR_TYPEDEF(IAspenThermoSystem, __uuidof(IAspenThermoSystem));
_COM_SMARTPTR_TYPEDEF(IAspenPropertyPackage, __uuidof(IAspenPropertyPackage));
_COM_SMARTPTR_TYPEDEF(IAspenThermoError, __uuidof(IAspenThermoError));
_COM_SMARTPTR_TYPEDEF(IAspnMaterialTemplate, __uuidof(IAspnMaterialTemplate));

//
// Type library items
//

enum __MIDL___MIDL_itf_AspenCapeX_0000_0000_0001
{
    CopyCannotChange = 1,
    CopyCanChange = 2
};

enum __MIDL___MIDL_itf_AspenCapeX_0000_0000_0002
{
    ReportGenerate = 1,
    ReportDoNotGenerate = 2
};

struct __declspec(uuid("b777a1a9-0c88-11d3-822e-00c04f4f66c9"))
IAssayUpdate : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall UpdateParameters (
        /*[in]*/ short NumPseudoComponents,
        /*[in,out]*/ SAFEARRAY * * ComponentIndex,
        /*[in,out]*/ SAFEARRAY * * PseudoCompDefiningParamValues,
        /*[in]*/ ReportOption ReportFlag ) = 0;
      virtual HRESULT __stdcall SetPetroPropValues (
        /*[in]*/ BSTR OutletStreamID,
        /*[in]*/ BSTR PropName,
        /*[in]*/ short NumComponents,
        /*[in,out]*/ SAFEARRAY * * ComponentIndex,
        /*[in,out]*/ SAFEARRAY * * PetroPropValues,
        /*[in]*/ double Temperature,
        /*[in]*/ BSTR Unit ) = 0;
      virtual HRESULT __stdcall CopyAssayData (
        /*[in]*/ CopyOption CopyFlag,
        /*[in]*/ BSTR InletStreamID,
        /*[in]*/ short NumInletStreams,
        /*[in,out]*/ SAFEARRAY * * InletStreamIDs,
        /*[in]*/ BSTR OutletStreamID,
        /*[in]*/ double FlowIn,
        /*[in]*/ short MissingValuesDefaultOption ) = 0;
      virtual HRESULT __stdcall GetComponentIndex (
        /*[in]*/ BSTR AssayID,
        /*[in]*/ int NumLightEndComponents,
        /*[in]*/ int NumPseudoComponents,
        /*[in,out]*/ SAFEARRAY * * LightEndComponentIndex,
        /*[in,out]*/ SAFEARRAY * * PseudoComponentIndex ) = 0;
      virtual HRESULT __stdcall GetAssayCount (
        /*[out,retval]*/ int * count ) = 0;
      virtual HRESULT __stdcall GetAssayID (
        /*[in]*/ int index,
        /*[out,retval]*/ BSTR * AssayID ) = 0;
      virtual HRESULT __stdcall GetPropertyCount (
        /*[out,retval]*/ int * count ) = 0;
      virtual HRESULT __stdcall GetPropertyName (
        /*[in]*/ int index,
        /*[out,retval]*/ BSTR * name ) = 0;
      virtual HRESULT __stdcall GetParameters (
        /*[in,out]*/ BSTR ParaName,
        /*[in]*/ short NumPseudoComponents,
        /*[in,out]*/ SAFEARRAY * * ComponentIndex,
        /*[in,out]*/ SAFEARRAY * * PseudoCompDefiningParamValues ) = 0;
      virtual HRESULT __stdcall GetPetroPropValues (
        /*[in]*/ BSTR OutletStreamID,
        /*[in]*/ BSTR PropName,
        /*[in]*/ short NumComponents,
        /*[in,out]*/ SAFEARRAY * * ComponentIndex,
        /*[in,out]*/ SAFEARRAY * * PetroPropValues,
        /*[in]*/ double Temperature,
        /*[in]*/ BSTR Unit ) = 0;
      virtual HRESULT __stdcall GetComponentCount (
        /*[in]*/ BSTR AssayID,
        /*[in,out]*/ short * NumLightEndComponents,
        /*[in,out]*/ short * NumPseudoComponents ) = 0;
};

enum __MIDL___MIDL_itf_AspenCapeX_0001_0064_0001
{
    ErrorSeverityTerminal = 0,
    ErrorSeveritySevere = 1,
    ErrorSeverityError = 2,
    ErrorSeverityWarning = 3
};

struct __declspec(uuid("b777a1b9-0c88-11d3-822e-00c04f4f66c9"))
IATCapeXDiagnostic : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall SendMsgToHistory (
        /*[in]*/ BSTR message ) = 0;
      virtual HRESULT __stdcall SendMsgToTerminal (
        /*[in]*/ BSTR message ) = 0;
      virtual HRESULT __stdcall RaiseError (
        /*[in]*/ ErrorSeverity severity,
        /*[in]*/ BSTR context,
        /*[in]*/ BSTR message ) = 0;
};

struct __declspec(uuid("b777a1bd-0c88-11d3-822e-00c04f4f66c9"))
IATCapeXRealParameterSpec : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_DisplayUnits (
        /*[out,retval]*/ BSTR * bsUOM ) = 0;
};

struct __declspec(uuid("04c5cfc1-ae5c-11d3-8454-00c04f6e76f3"))
IAspenThermoSystem : IDispatch
{};

struct __declspec(uuid("04c5cfc2-ae5c-11d3-8454-00c04f6e76f3"))
IAspenPropertyPackage : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ListAvailablePropertyMethods (
        /*[out,retval]*/ VARIANT * propMethods ) = 0;
      virtual HRESULT __stdcall GetPropertyMethod (
        /*[out,retval]*/ BSTR * propMethod ) = 0;
      virtual HRESULT __stdcall SetPropertyMethod (
        /*[in]*/ BSTR propMethod ) = 0;
      virtual HRESULT __stdcall GetCalculationOptions (
        /*[in]*/ BSTR option,
        /*[out,retval]*/ VARIANT * value ) = 0;
      virtual HRESULT __stdcall SetCalculationOptions (
        /*[in]*/ BSTR option,
        /*[in]*/ VARIANT value ) = 0;
};

struct __declspec(uuid("04c5cfc3-ae5c-11d3-8454-00c04f6e76f3"))
IAspenThermoError : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetLastError (
        /*[out,retval]*/ long * errorID ) = 0;
      virtual HRESULT __stdcall SetLastError (
        /*[in]*/ long errorID ) = 0;
      virtual HRESULT __stdcall FormatMessage (
        /*[in]*/ long errorID,
        /*[out,retval]*/ BSTR * errorMsg ) = 0;
      virtual HRESULT __stdcall SetErrorMode (
        /*[in]*/ long errorMode,
        /*[in]*/ long numErrors ) = 0;
      virtual HRESULT __stdcall GetAllErrors (
        /*[in]*/ BSTR severity,
        /*[out,retval]*/ VARIANT * errorIDs ) = 0;
      virtual HRESULT __stdcall ClearAllErrors (
        /*[in]*/ BSTR severity ) = 0;
};

struct __declspec(uuid("8de3c930-8f7e-11d2-a71f-0000c0e749f8"))
IAspnMaterialTemplate : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall GetAvailableTemplates (
        /*[out,retval]*/ VARIANT * Templates ) = 0;
      virtual HRESULT __stdcall GetPropertyPackage (
        /*[out,retval]*/ struct ICapeThermoPropertyPackage * * ppIPkg ) = 0;
      virtual HRESULT __stdcall GetName (
        /*[out,retval]*/ BSTR * name ) = 0;
      virtual HRESULT __stdcall GetDescription (
        /*[out,retval]*/ BSTR * name ) = 0;
      virtual HRESULT __stdcall GetPropertyPackageName (
        /*[out,retval]*/ BSTR * lpszPropPkgName ) = 0;
      virtual HRESULT __stdcall GetComponentIds (
        /*[out,retval]*/ VARIANT * pCompIds ) = 0;
      virtual HRESULT __stdcall GetNumComponents (
        /*[out,retval]*/ long * num ) = 0;
      virtual HRESULT __stdcall GetPhaseIds (
        /*[out,retval]*/ VARIANT * phaseIds ) = 0;
      virtual HRESULT __stdcall GetOptionSetIds (
        /*[out,retval]*/ VARIANT * optionSetIds ) = 0;
      virtual HRESULT __stdcall SetName (
        /*[in]*/ BSTR name ) = 0;
      virtual HRESULT __stdcall SetDescription (
        /*[in]*/ BSTR name ) = 0;
      virtual HRESULT __stdcall SetPropertyPackageName (
        /*[in]*/ BSTR lpszPropPkgName ) = 0;
      virtual HRESULT __stdcall SetComponentIds (
        /*[in]*/ VARIANT compIds ) = 0;
      virtual HRESULT __stdcall SetPhaseIds (
        /*[in]*/ VARIANT phaseIds ) = 0;
      virtual HRESULT __stdcall SetOptionSetIds (
        /*[in]*/ VARIANT optionSetIds ) = 0;
      virtual HRESULT __stdcall Save (
        /*[in]*/ BSTR lpszTemplateName ) = 0;
      virtual HRESULT __stdcall Open (
        /*[in]*/ BSTR lpszTemplateName ) = 0;
      virtual HRESULT __stdcall Remove (
        /*[in]*/ BSTR lpszTemplateName ) = 0;
      virtual HRESULT __stdcall GetThermoSystemProgID (
        /*[out,retval]*/ BSTR * lpszProgID ) = 0;
      virtual HRESULT __stdcall SetThermoSystemProgID (
        /*[in]*/ BSTR lpszProgID ) = 0;
};

struct __declspec(uuid("ddf883b5-8608-497a-9e21-62bd8f5d58bc"))
AspnMatTemplate;
    // interface ICapeThermoMaterialTemplate
    // [ default ] interface IAspnMaterialTemplate

struct __declspec(uuid("0db79908-adbc-4b09-ab58-d8b94015e5aa"))
AspnPropSystem;
    // [ default ] interface ICapeThermoSystem

struct __declspec(uuid("3b47fc08-17a0-465f-a46b-e2936640f3da"))
AssayUpdate;
    // [ default ] interface IAssayUpdate

struct __declspec(uuid("36413a67-68cd-4cb1-ab49-2781ddde62ff"))
ATCapeXDiagnostic;
    // [ default ] interface IATCapeXDiagnostic

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_AspenCapeOpenExtensions =
    {0xd9a6afd8,0x521c,0x47b2,{0xae,0xab,0x16,0xba,0x30,0x55,0xd5,0xca}};
extern "C" const GUID __declspec(selectany) IID_IAssayUpdate =
    {0xb777a1a9,0x0c88,0x11d3,{0x82,0x2e,0x00,0xc0,0x4f,0x4f,0x66,0xc9}};
extern "C" const GUID __declspec(selectany) IID_IATCapeXDiagnostic =
    {0xb777a1b9,0x0c88,0x11d3,{0x82,0x2e,0x00,0xc0,0x4f,0x4f,0x66,0xc9}};
extern "C" const GUID __declspec(selectany) IID_IATCapeXRealParameterSpec =
    {0xb777a1bd,0x0c88,0x11d3,{0x82,0x2e,0x00,0xc0,0x4f,0x4f,0x66,0xc9}};
extern "C" const GUID __declspec(selectany) IID_IAspenThermoSystem =
    {0x04c5cfc1,0xae5c,0x11d3,{0x84,0x54,0x00,0xc0,0x4f,0x6e,0x76,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IAspenPropertyPackage =
    {0x04c5cfc2,0xae5c,0x11d3,{0x84,0x54,0x00,0xc0,0x4f,0x6e,0x76,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IAspenThermoError =
    {0x04c5cfc3,0xae5c,0x11d3,{0x84,0x54,0x00,0xc0,0x4f,0x6e,0x76,0xf3}};
extern "C" const GUID __declspec(selectany) IID_IAspnMaterialTemplate =
    {0x8de3c930,0x8f7e,0x11d2,{0xa7,0x1f,0x00,0x00,0xc0,0xe7,0x49,0xf8}};
extern "C" const GUID __declspec(selectany) CLSID_AspnMatTemplate =
    {0xddf883b5,0x8608,0x497a,{0x9e,0x21,0x62,0xbd,0x8f,0x5d,0x58,0xbc}};
extern "C" const GUID __declspec(selectany) CLSID_AspnPropSystem =
    {0x0db79908,0xadbc,0x4b09,{0xab,0x58,0xd8,0xb9,0x40,0x15,0xe5,0xaa}};
extern "C" const GUID __declspec(selectany) CLSID_AssayUpdate =
    {0x3b47fc08,0x17a0,0x465f,{0xa4,0x6b,0xe2,0x93,0x66,0x40,0xf3,0xda}};
extern "C" const GUID __declspec(selectany) CLSID_ATCapeXDiagnostic =
    {0x36413a67,0x68cd,0x4cb1,{0xab,0x49,0x27,0x81,0xdd,0xde,0x62,0xff}};

#pragma pack(pop)
